{"version":3,"sources":["config/keys.js","config/prod.js","reducers/index.js","reducers/dataReducer.js","actions/types.js","config/firebase.js","actions/index.js","components/ListItem.js","components/List.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","require","__webpack_require__","r","__webpack_exports__","d","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","combineReducers","data","state","arguments","length","undefined","action","type","payload","firebase","todosRef","ref","child","addToDo","newToDo","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","push","set","stop","this","_x","apply","completeToDo","completeToDoId","_ref2","_callee2","_context2","remove","_x2","fetchToDos","_ref3","_callee3","_context3","on","snapshot","val","_x3","ListItem","completeClick","completeTodoId","_this","props","_this2","_this$props","todoId","todo","react_default","createElement","key","className","title","onClick","Component","connect","List","showForm","formValue","inputChange","event","setState","target","value","formSubmit","preventDefault","renderForm","_this$state","id","onSubmit","onChange","htmlFor","toDos","_","map","components_ListItem","isEmpty","renderToDo","actions","App","components_List","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"4EACEA,EAAOC,QAAUC,EAAQ,yECD3BC,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,mCAAAE,IAAO,IAAMA,EAAiB,CAC1BC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,+RCHRC,cAAgB,CAC7BC,KCFa,WAAwB,IAAvBC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrC,OAAOC,EAAOC,MACZ,ICJuB,cDKrB,OAAOD,EAAOE,QAChB,QACE,OAAON,oGEJbO,gBAAuBhB,kBAEvB,IACaiB,EADOD,aAAoBE,MACJC,MAAM,SCH7BC,EAAU,SAAAC,GAAO,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAChChB,EAASiB,OAAOC,IAAId,GADY,wBAAAU,EAAAK,SAAAR,EAAAS,SAAJ,gBAAAC,GAAA,OAAAhB,EAAAiB,MAAAF,KAAA3B,YAAA,IAIjB8B,EAAe,SAAAC,GAAc,sBAAAC,EAAAnB,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAAgB,EAAMd,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,OAC5ChB,EAASE,MAAMsB,GAAgBI,SADa,wBAAAD,EAAAR,SAAAO,EAAAN,SAAJ,gBAAAS,GAAA,OAAAJ,EAAAH,MAAAF,KAAA3B,YAAA,IAI7BqC,EAAa,iCAAAC,EAAAzB,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAM,SAAAsB,EAAMpB,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,OAC9BhB,EAASkC,GAAG,QAAS,SAAAC,GACnBvB,EAAS,CACPf,KFdqB,cEerBC,QAASqC,EAASC,UAJQ,wBAAAH,EAAAd,SAAAa,EAAAZ,SAAN,gBAAAiB,GAAA,OAAAN,EAAAT,MAAAF,KAAA3B,YAAA,ICPpB6C,6MACJC,cAAgB,SAAAC,IAEdjB,EADuBkB,EAAKC,MAArBnB,cACMiB,4EAEN,IAAAG,EAAAvB,KAAAwB,EACexB,KAAKsB,MAArBG,EADCD,EACDC,OAAQC,EADPF,EACOE,KACd,OACEC,EAAAtC,EAAAuC,cAAA,OAAKC,IAAI,WAAWC,UAAU,2CAC5BH,EAAAtC,EAAAuC,cAAA,UACGF,EAAKK,MACNJ,EAAAtC,EAAAuC,cAAA,QACEI,QAAS,kBAAMT,EAAKJ,cAAcM,IAClCK,UAAU,0FAEVH,EAAAtC,EAAAuC,cAAA,KAAGE,UAAU,wBAAb,kBAfWG,aAuBRC,cAAQ,KAAM,CAAC/B,gBAAf+B,CAA8BhB,GCpBvCiB,oNACJ/D,MAAQ,CACNgE,UAAU,EACVC,UAAW,MAGbC,YAAc,SAAAC,GACZlB,EAAKmB,SAAS,CAACH,UAAWE,EAAME,OAAOC,WAGzCC,WAAa,SAAAJ,GAAS,IACbF,EAAahB,EAAKjD,MAAlBiE,UACAtD,EAAWsC,EAAKC,MAAhBvC,QACPwD,EAAMK,iBACN7D,EAAQ,CAACgD,MAAOM,IAChBhB,EAAKmB,SAAS,CAACH,UAAW,QAG5BQ,WAAa,WAAM,IAAAC,EACazB,EAAKjD,MAA5BgE,EADUU,EACVV,SAAUC,EADAS,EACAT,UACjB,GAAID,EACF,OACET,EAAAtC,EAAAuC,cAAA,OAAKmB,GAAG,gBAAgBjB,UAAU,qBAChCH,EAAAtC,EAAAuC,cAAA,QAAMoB,SAAU3B,EAAKsB,YACnBhB,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,eACbH,EAAAtC,EAAAuC,cAAA,SACEc,MAAOL,EACPY,SAAU5B,EAAKiB,YACfS,GAAG,WACHtE,KAAK,SAEPkD,EAAAtC,EAAAuC,cAAA,SAAOsB,QAAQ,YAAf,8FAOC,IACJ/E,EAAQ6B,KAAKsB,MAAbnD,KACDgF,EAAQC,IAAEC,IAAIlF,EAAM,SAACuE,EAAOb,GAChC,OAAOF,EAAAtC,EAAAuC,cAAC0B,EAAD,CAAUzB,IAAKA,EAAKJ,OAAQI,EAAKH,KAAMgB,MAEhD,OAAKU,IAAEG,QAAQJ,GAIbxB,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,kCACbH,EAAAtC,EAAAuC,cAAA,4CAJKuB,+CASTnD,KAAKsB,MAAMZ,8CAEJ,IAAAa,EAAAvB,KACAoC,EAAYpC,KAAK5B,MAAjBgE,SACP,OACET,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,wBACbH,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,OACZ9B,KAAK6C,aACL7C,KAAKwD,cAER7B,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,oBACbH,EAAAtC,EAAAuC,cAAA,UACEI,QAAS,kBAAMT,EAAKiB,SAAS,CAACJ,UAAWA,KACzCN,UAAU,yCAEXM,EACCT,EAAAtC,EAAAuC,cAAA,KAAGE,UAAU,wBAAb,KAEAH,EAAAtC,EAAAuC,cAAA,KAAGE,UAAU,wBAAb,eAvEOG,cAsFJC,cANS,SAAAjD,GACtB,MAAO,CACLd,KAFgCc,EAAVd,OAMcsF,EAAzBvB,CAAkCC,GCjFlCuB,mLAPX,OACE/B,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,aACbH,EAAAtC,EAAAuC,cAAC+B,EAAD,cAJU1B,aCSZ2B,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBvG,QACfiG,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,gHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,KCrFjE,IAAMC,EAAQC,YAAYC,EAAU,GAAIC,YAAgBC,MAExDC,IAASC,OACPhE,EAAAtC,EAAAuC,cAACgE,EAAA,EAAD,CAAUP,MAAOA,GACf1D,EAAAtC,EAAAuC,cAACiE,EAAD,OAEFC,SAASC,eAAe,SDKnB,SAAkB3B,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI2B,IAAIC,GAAwBnC,OAAOC,SAASmC,MACpDC,SAAWrC,OAAOC,SAASoC,OAIvC,OAGFrC,OAAOsC,iBAAiB,OAAQ,WAC9B,IAAMjC,EAAK,GAAAkC,OAAMJ,GAAN,sBAEPrC,GAgEV,SAAiCO,EAAOC,GAEtCkC,MAAMnC,GACHK,KAAK,SAAA+B,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5CvC,UAAUC,cAAcuC,MAAMrC,KAAK,SAAAC,GACjCA,EAAaqC,aAAatC,KAAK,WAC7BV,OAAOC,SAASgD,aAKpB7C,EAAgBC,EAAOC,KAG1Be,MAAM,WACLJ,QAAQC,IACN,mEArFAgC,CAAwB7C,EAAOC,GAI/BC,UAAUC,cAAcuC,MAAMrC,KAAK,WACjCO,QAAQC,IACN,+GAMJd,EAAgBC,EAAOC,MC/B/BE","file":"static/js/main.d3c013dc.chunk.js","sourcesContent":["if (process.env.NODE_ENV === \"production\") {\n  module.exports = require('./prod');\n} else {\n  module.exports = require('./dev');\n}","export const FirebaseConfig = {\n    apiKey: \"AIzaSyCqKO3-1aVdQDCw2vhZDeUmW9-doec2F90\",\n    authDomain: \"todo-pwa-2afa9.firebaseapp.com\",\n    databaseURL: \"https://todo-pwa-2afa9.firebaseio.com\",\n    projectId: \"todo-pwa-2afa9\",\n    storageBucket: \"todo-pwa-2afa9.appspot.com\",\n    messagingSenderId: \"264367764837\"\n  }","import {combineReducers} from 'redux';\nimport data from './dataReducer';\n\nexport default combineReducers({\n  data\n});","import {FETCH_TODOS} from '../actions/types';\n\nexport default (state = {}, action) => {\n  switch(action.type) {\n    case FETCH_TODOS:\n      return action.payload;\n    default:\n      return state;\n  }\n};","export const FETCH_TODOS = \"FETCH_TODOS\"","import * as firebase from 'firebase'\n\nimport {FirebaseConfig} from '../config/keys';\nfirebase.initializeApp(FirebaseConfig)\n\nconst databaseRef = firebase.database().ref();\nexport const todosRef = databaseRef.child(\"todos\")","import {todosRef} from '../config/firebase';\nimport {FETCH_TODOS} from './types';\n\nexport const addToDo = newToDo => async dispatch => {\n  todosRef.push().set(newToDo);\n};\n\nexport const completeToDo = completeToDoId => async dispatch => {\n  todosRef.child(completeToDoId).remove();\n};\n\nexport const fetchToDos = () => async dispatch => {\n  todosRef.on(\"value\", snapshot => {\n    dispatch({\n      type: FETCH_TODOS,\n      payload: snapshot.val()\n    });\n  });\n};","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {completeToDo} from '../actions';\n\nclass ListItem extends Component {\n  completeClick = completeTodoId => {\n    const {completeToDo} = this.props;\n    completeToDo(completeTodoId);\n  };\n  render() {\n    const{todoId, todo} = this.props;\n    return (\n      <div key=\"toDoName\" className=\"col s10 offset-s1 to-do-list-item black\">\n        <h4>\n          {todo.title}\n          <span \n            onClick={() => this.completeClick(todoId)}\n            className=\"complete-todo-item waves-effect waves-light blue lighten-5 blue-text text-darken-4 btn\"\n          >\n            <i className=\"large material-icons\">Done</i>\n          </span>\n        </h4>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, {completeToDo})(ListItem);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport _ from 'lodash';\nimport * as actions from '../actions';\nimport ListItem from './ListItem';\nimport \"./style.css\";\n\nclass List extends Component {\n  state = {\n    showForm: false,\n    formValue: \"\"\n  };\n\n  inputChange = event => {\n    this.setState({formValue: event.target.value});\n  };\n\n  formSubmit = event => {\n    const {formValue} = this.state;\n    const {addToDo} = this.props;\n    event.preventDefault();\n    addToDo({title: formValue});\n    this.setState({formValue: \"\"});\n  };\n\n  renderForm = () => {\n    const {showForm, formValue} = this.state;\n    if (showForm) {\n      return (\n        <div id=\"todo-add-form\" className=\"col s10 offset-s1\">\n          <form onSubmit={this.formSubmit}>\n            <div className=\"input-field\">\n              <input \n                value={formValue}\n                onChange={this.inputChange}\n                id=\"toDoNext\"\n                type=\"text\"\n              />\n              <label htmlFor=\"toDoNext\">What Next?</label>\n            </div>\n          </form>\n        </div>\n      );\n    }\n  };\n  renderToDo() {\n    const {data} = this.props;\n    const toDos = _.map(data, (value, key) => {\n      return <ListItem key={key} todoId={key} todo={value} />;\n    });\n    if (!_.isEmpty(toDos)) {\n      return toDos;\n    }\n    return (\n      <div className=\"col s10 offset-s1 center-align\">\n        <h4>You have no more things ToDo!</h4>\n      </div>\n    );\n  }\n  componentWillMount() {\n    this.props.fetchToDos();\n  }\n  render() {\n    const {showForm} = this.state;\n    return (\n      <div className=\"to-do-list-container\">\n        <div className=\"row\">\n          {this.renderForm()}\n          {this.renderToDo()}\n        </div>\n        <div className=\"fixed-action-btn\">\n          <button \n            onClick={() => this.setState({showForm: !showForm})}\n            className=\"btn-floating btn-large black darken-4\"\n          >\n          {showForm ? (\n            <i className=\"large material-icons\">-</i>\n          ) : (\n            <i className=\"large material-icons\">+</i>\n          )}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({data}) => {\n  return {\n    data\n  }\n}\n\nexport default connect(mapStateToProps, actions)(List);","import React, {Component} from 'react';\nimport List from './components/List';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <List/>\n      </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"materialize-css/dist/css/materialize.min.css\";\nimport \"materialize-css/dist/js/materialize.min.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport reducers from './reducers';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.register();"],"sourceRoot":""}