{"ast":null,"code":"import _regeneratorRuntime from \"/Users/andrewlozynskyj/Projects/PWA-TODO-APP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/andrewlozynskyj/Projects/PWA-TODO-APP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { todosRef } from '../../config/firebase';\nimport { FETCH_TODOS } from './types';\nexport var addToDo = function addToDo(newToDo) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                todosRef.push().set(newToDo);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var completeToDo = function completeToDo(completeToDoId) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                todosRef.child(completeToDoId).remove();\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchToDos = function fetchToDos() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                todosRef.on('value', function (snapshot) {\n                  dispatch({\n                    type: FETCH_TODOS,\n                    payload: snapshot.val()\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/andrewlozynskyj/Projects/PWA-TODO-APP/src/store/actions/index.js"],"names":["todosRef","FETCH_TODOS","addToDo","newToDo","dispatch","push","set","completeToDo","completeToDoId","child","remove","fetchToDos","on","snapshot","type","payload","val"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,uBAAvB;AACA,SAAQC,WAAR,QAA0B,SAA1B;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAChCJ,gBAAAA,QAAQ,CAACK,IAAT,GAAgBC,GAAhB,CAAoBH,OAApB;;AADgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAIP,OAAO,IAAMI,YAAY,GAAG,SAAfA,YAAe,CAAAC,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,kBAAMJ,QAAN;AAAA;AAAA;AAAA;AAAA;AAC5CJ,gBAAAA,QAAQ,CAACS,KAAT,CAAeD,cAAf,EAA+BE,MAA/B;;AAD4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnC;AAIP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,kBAAMP,QAAN;AAAA;AAAA;AAAA;AAAA;AAC9BJ,gBAAAA,QAAQ,CAACY,EAAT,CAAY,OAAZ,EAAqB,UAAAC,QAAQ,EAAI;AAC/BT,kBAAAA,QAAQ,CAAC;AACPU,oBAAAA,IAAI,EAAEb,WADC;AAEPc,oBAAAA,OAAO,EAAEF,QAAQ,CAACG,GAAT;AAFF,mBAAD,CAAR;AAID,iBALD;;AAD8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB","sourcesContent":["import {todosRef} from '../../config/firebase';\nimport {FETCH_TODOS} from './types';\n\nexport const addToDo = newToDo => async dispatch => {\n  todosRef.push().set(newToDo);\n};\n\nexport const completeToDo = completeToDoId => async dispatch => {\n  todosRef.child(completeToDoId).remove();\n};\n\nexport const fetchToDos = () => async dispatch => {\n  todosRef.on('value', snapshot => {\n    dispatch({\n      type: FETCH_TODOS,\n      payload: snapshot.val()\n    });\n  });\n};"]},"metadata":{},"sourceType":"module"}